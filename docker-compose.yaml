version: '3.8'

services:
  database:
    image: postgis/postgis:16-master
    platform: linux/amd64
    container_name: fresh_db
    command: postgres -c "listen_addresses=*"
    ports:
      - "5432:5432"
    volumes:
      - ./data/database:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5

  cache:
    image: redis:6
    container_name: cache-lore-meme
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "[ $$(redis-cli ping) = 'PONG' ]"]
      interval: 10s
      timeout: 5s
      retries: 5

  directus:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: directus-lore-meme
    ports:
      - "${DIRECTUS_PORT:-8055}:8055"
    depends_on:
      database:
        condition: service_healthy
      cache:
        condition: service_healthy
    volumes:
      - ./templates:/directus/templates
      - ./extensions:/directus/extensions
      - ./uploads:/directus/uploads
      - ./migrations:/directus/migrations
    environment:
      # Core Directus
      KEY: ${KEY}
      SECRET: ${SECRET}
      DB_CLIENT: ${DB_CLIENT}
      DB_CONNECTION_STRING: ${DB_CONNECTION_STRING}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      ADMIN_TOKEN: ${ADMIN_TOKEN}
      
      # Cache
      CACHE_ENABLED: "true"
      CACHE_STORE: "redis"
      REDIS: "redis://cache:6379"
      
      # URLs and CORS
      PUBLIC_URL: ${PUBLIC_URL}
      CORS_ENABLED: "true"
      CORS_ORIGIN: ${CORS_ORIGIN}
      
      # Email Configuration
      EMAIL_TRANSPORT: ${EMAIL_TRANSPORT}
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_FROM_NAME: ${EMAIL_FROM_NAME}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_SECURE: ${SMTP_SECURE}
      SMTP_REQUIRE_TLS: ${SMTP_REQUIRE_TLS}
      EMAIL_TEMPLATES_PATH: "/directus/templates"
      
      # Password Reset
      PASSWORD_RESET_URL_ALLOW_LIST: ${PASSWORD_RESET_URL_ALLOW_LIST}
      
      # Extensions不明白为什么会翻译成Extensions
      EXTENSIONS_PATH: "/directus/extensions"
      EXTENSIONS_AUTO_RELOAD: ${EXTENSIONS_AUTO_RELOAD}
      
      # Storage (S3)
      STORAGE_LOCATIONS: ${STORAGE_LOCATIONS}
      STORAGE_S3_DRIVER: ${STORAGE_S3_DRIVER}
      STORAGE_S3_KEY: ${STORAGE_S3_KEY}
      STORAGE_S3_SECRET: ${STORAGE_S3_SECRET}
      STORAGE_S3_BUCKET: ${STORAGE_S3_BUCKET}
      STORAGE_S3_REGION: ${STORAGE_S3_REGION}
      STORAGE_S3_ENDPOINT: ${STORAGE_S3_ENDPOINT}
      
      # Rate Limiter
      RATE_LIMITER_ENABLED: ${RATE_LIMITER_ENABLED}
      RATE_LIMITER_POINTS: ${RATE_LIMITER_POINTS}
      RATE_LIMITER_DURATION: ${RATE_LIMITER_DURATION}
      
      # Webhooks
      WEBHOOK_SECRET: ${WEBHOOK_SECRET}
      
      # Websockets
      WEBSOCKETS_ENABLED: ${WEBSOCKETS_ENABLED}
      
      # Assets
      ASSETS_CACHE_TTL: ${ASSETS_CACHE_TTL}
      ASSETS_TRANSFORM_MAX_CONCURRENT: ${ASSETS_TRANSFORM_MAX_CONCURRENT}
      
      # Coingecko
      COINGECKO_API_KEY: ${COINGECKO_API_KEY}
      COINGECKO_API_URL: ${COINGECKO_API_URL}
      
      # Migrations
      MIGRATIONS_PATH: ${MIGRATIONS_PATH}
      
      # Config
      CONFIG_PATH: ${CONFIG_PATH}
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin-lore-meme
    ports:
      - "${PGADMIN_PORT}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    depends_on:
      - database
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
